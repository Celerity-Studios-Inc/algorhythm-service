name: AlgoRhythm Service CI/CD (Development)

on:
  push:
    branches: [dev]
  pull_request:
    branches: [dev]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/algorhythm-repo/algorhythm-service-dev:${{ github.sha }}-${{ github.run_id }}-dev

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Run tests
        run: npm test -- --passWithNoTests

      - name: Build Docker image
        run: docker build --platform linux/amd64 --no-cache -t $IMAGE_TAG -f docker/Dockerfile.cloudrun .

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker for Google Cloud
        run: gcloud auth configure-docker us-central1-docker.pkg.dev

      - name: Push Docker image
        run: docker push $IMAGE_TAG

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy algorhythm-service-dev \
            --image $IMAGE_TAG \
            --region us-central1 \
            --platform managed \
            --execution-environment=gen2 \
            --service-account=ci-cd-service-account@revize-453014.iam.gserviceaccount.com \
            --allow-unauthenticated \
            --port 8080 \
            --memory 1Gi \
            --cpu 1 \
            --max-instances 10 \
            --min-instances 1 \
            --concurrency 100 \
            --timeout 300 \
            --set-secrets=MONGODB_URI=algorhythm-mongodb-uri-dev:latest \
            --set-secrets=REDIS_URL=algorhythm-redis-url-dev:latest \
            --set-secrets=JWT_SECRET=algorhythm-jwt-secret-dev:latest \
            --set-secrets=NNA_REGISTRY_API_KEY=algorhythm-nna-api-key-dev:latest \
                    --set-env-vars "NODE_ENV=development,ENVIRONMENT=development,NNA_REGISTRY_BASE_URL=https://registry.dev.reviz.dev,ALGORHYTHM_BASE_URL=https://dev.algorhythm.dev"

      - name: Update Traffic to Latest Revision
        run: |
          gcloud run services update-traffic algorhythm-service-dev \
            --region us-central1 \
            --to-latest

      - name: Post-deploy health check
        run: |
          SERVICE_URL=$(gcloud run services describe algorhythm-service-dev --region us-central1 --format='value(status.url)')
          echo "Checking health endpoint: $SERVICE_URL/api/v1/health"
          for i in {1..10}; do
            STATUS=$(curl -s -o /dev/null -w "%{http_code}" "$SERVICE_URL/api/v1/health")
            if [ "$STATUS" = "200" ]; then
              echo "Health check passed."
              exit 0
            fi
            echo "Waiting for service to become healthy... ($i/10)"
            sleep 6
          done
          echo "Health check failed!"
          exit 1

      - name: Output Development URL
        run: |
          SERVICE_URL=$(gcloud run services describe algorhythm-service-dev --region us-central1 --format='value(status.url)')
          echo "üåê AlgoRhythm Development Service URL: $SERVICE_URL"
          echo "üìö Swagger Docs: $SERVICE_URL/api/docs"
          echo "üè• Health Check: $SERVICE_URL/api/v1/health"
