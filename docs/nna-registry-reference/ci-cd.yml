name: NNA Registry Service CI/CD

on:
  push:
    branches: [main]
    paths:
      - 'src/**'
      - 'package.json'
      - 'tsconfig.json'
      - 'Dockerfile'
      - 'README.md'
      - 'entrypoint.sh'
      - '.github/workflows/ci-cd.yml'
  pull_request:
    branches: [main]
    paths:
      - 'src/**'
      - 'package.json'
      - 'tsconfig.json'
      - 'Dockerfile'
      - 'README.md'
      - 'entrypoint.sh'
      - '.github/workflows/ci-cd.yml'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: gcr.io/${{ secrets.GCP_PROJECT_ID }}/nna-registry-service:${{ github.sha }}-${{ github.run_id }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Build Docker image
        run: docker build --platform linux/amd64 --no-cache -t $IMAGE_TAG .

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker for Google Cloud
        run: gcloud auth configure-docker

      - name: Push Docker image
        run: docker push $IMAGE_TAG

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy nna-registry-service \
            --image $IMAGE_TAG \
            --region us-central1 \
            --platform managed \
            --service-account=nna-registry-service-prod@revize-453014.iam.gserviceaccount.com \
            --allow-unauthenticated \
            --set-secrets="MONGODB_URI=mongodb-uri-production:latest,JWT_SECRET=JWT_SECRET_PROD:latest,GCP_BUCKET_NAME=GCP_BUCKET_NAME:latest,SENTRY_DSN=sentry-dsn:latest,/etc/gcp/key=gcp-sa-key-prod:latest" \
            --set-env-vars "NODE_ENV=production,ENVIRONMENT=production,GCP_PROJECT_ID=${{ secrets.GCP_PROJECT_ID }},GOOGLE_APPLICATION_CREDENTIALS=/etc/gcp/key"
      - name: Post-deploy health check
        run: |
          SERVICE_URL=$(gcloud run services describe nna-registry-service --region us-central1 --format='value(status.url)')
          echo "Checking health endpoint: $SERVICE_URL/api/health"
          for i in {1..10}; do
            STATUS=$(curl -s -o /dev/null -w "%{http_code}" "$SERVICE_URL/api/health")
            if [ "$STATUS" = "200" ]; then
              echo "Health check passed."
              exit 0
            fi
            echo "Waiting for service to become healthy... ($i/10)"
            sleep 6
          done
          echo "Health check failed!"
          exit 1
      - name: Output Production URL
        run: |
          SERVICE_URL=$(gcloud run services describe nna-registry-service --region us-central1 --format='value(status.url)')
          echo "üåê Production Service URL: $SERVICE_URL"
          echo "üìö Swagger Docs: $SERVICE_URL/api/docs"

# Trigger build after rollback
