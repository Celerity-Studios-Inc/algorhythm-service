name: Deploy to Staging

on:
  push:
    branches: [ staging ]
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: us-central1
  SERVICE_NAME: nna-registry-service-stg

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build

    - name: Setup Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true

    - name: Configure Docker
      run: gcloud auth configure-docker

    - name: Build and push Docker image
      run: |
        docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }} .
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }}

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy ${{ env.SERVICE_NAME }} \
          --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }} \
          --platform managed \
          --region ${{ env.REGION }} \
          --allow-unauthenticated \
          --set-env-vars="NODE_ENV=staging,ENVIRONMENT=staging,GCP_BUCKET_NAME=nna-registry-stg,MONGODB_URI=${{ secrets.STAGING_MONGODB_URI }},GOOGLE_APPLICATION_CREDENTIALS=${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}" \
          --memory 1Gi \
          --cpu 1 \
          --max-instances 10 \
          --port 8080

    - name: Get service URL
      run: |
        echo "STAGING_URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} --platform managed --region ${{ env.REGION }} --format 'value(status.url)')" >> $GITHUB_ENV

    - name: Wait for deployment
      run: |
        echo "Waiting for service to be ready..."
        sleep 30

    - name: Run staging verification tests
      run: |
        npm install axios
        node scripts/staging/verify-staging-deployment.js

    - name: Deployment Summary
      run: |
        echo "ðŸŽ‰ Staging deployment completed!"
        echo "Service URL: ${{ env.STAGING_URL }}"
        echo "Version: v1.5.0"
        echo "Environment: staging" 